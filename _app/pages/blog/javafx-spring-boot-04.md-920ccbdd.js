import{S as Os,i as Ds,s as Js,C as Wn,w as Rs,x as Hs,y as Ws,z as $s,A as Ls,q as zs,o as Us,B as Vs,Q as Ss,e as o,t,k as f,c as p,a as l,h as e,d as s,m as v,b as h,F as Ns,g as i,G as n,D as Gs}from"../../chunks/index-ca5692cf.js";import{P as Ys}from"../../chunks/_post-3b80de77.js";/* empty css                                  */function Qs(q){let u,g,E,F,r,w,L,Oa,Da,U,A,Ja,Ra,V,T,Ha,Wa,N,$a,za,G,O,Ua,va,ma,ha,S,Va,M,Na,Ga,wa,D,Ya,ga,J,R,$n,xa,H,Qa,_a,ba,ya,B,Fs=`<code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.openjfx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>javafx-fxml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;javafx.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code>`,Ea,La,Sa,W,Ka,Ca,X,Ms=`<code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span>

<span class="token prolog">&lt;?import javafx.geometry.*?></span>
<span class="token prolog">&lt;?import javafx.scene.control.*?></span>
<span class="token prolog">&lt;?import javafx.scene.layout.*?></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AnchorPane</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>fx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://javafx.com/fxml/1<span class="token punctuation">"</span></span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://javafx.com/javafx/11.0.2<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">fx:</span>controller</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.hrzafer.javafxspringbootstarter.controller.MainController<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>children</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">layoutX</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>31.0<span class="token punctuation">"</span></span> <span class="token attr-name">layoutY</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>29.0<span class="token punctuation">"</span></span> <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Google:<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextField</span> <span class="token attr-name"><span class="token namespace">fx:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>keywordTextField<span class="token punctuation">"</span></span> <span class="token attr-name">layoutX</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>76.0<span class="token punctuation">"</span></span> <span class="token attr-name">layoutY</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>25.0<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">fx:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>searchButton<span class="token punctuation">"</span></span> <span class="token attr-name">layoutX</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>75.0<span class="token punctuation">"</span></span> <span class="token attr-name">layoutY</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>69.0<span class="token punctuation">"</span></span> <span class="token attr-name">prefHeight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>25.0<span class="token punctuation">"</span></span> <span class="token attr-name">prefWidth</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>149.0<span class="token punctuation">"</span></span> <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Search<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>children</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>padding</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Insets</span> <span class="token attr-name">bottom</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10.0<span class="token punctuation">"</span></span> <span class="token attr-name">left</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10.0<span class="token punctuation">"</span></span> <span class="token attr-name">right</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10.0<span class="token punctuation">"</span></span> <span class="token attr-name">top</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10.0<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>padding</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>AnchorPane</span><span class="token punctuation">></span></span></code>`,Fa,m,Za,Y,an,nn,Q,sn,tn,K,en,on,Z,pn,ln,Ma,j,Bs=`<code class="language-java"><span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainController</span> <span class="token punctuation">&#123;</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">HostServices</span> hostServices<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@FXML</span>
    <span class="token keyword">public</span> <span class="token class-name">TextField</span> keywordTextField<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@FXML</span>
    <span class="token keyword">public</span> <span class="token class-name">Button</span> searchButton<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">MainController</span><span class="token punctuation">(</span><span class="token class-name">HostServices</span> hostServices<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>hostServices <span class="token operator">=</span> hostServices<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token annotation punctuation">@FXML</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>searchButton<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span>actionEvent <span class="token operator">-></span> <span class="token keyword">this</span><span class="token punctuation">.</span>hostServices<span class="token punctuation">.</span><span class="token function">showDocument</span><span class="token punctuation">(</span><span class="token string">"https://www.google.ca/search?q="</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>keywordTextField<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`,Ba,x,cn,aa,rn,un,na,kn,dn,Xa,_,fn,sa,vn,mn,ta,hn,wn,ja,P,Xs='<code class="language-java">context<span class="token punctuation">.</span><span class="token function">registerBean</span><span class="token punctuation">(</span><span class="token class-name">HostServices</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token operator">::</span><span class="token function">getHostServices</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>',Pa,C,gn,ea,xn,_n,Ia,I,js=`<code class="language-java"><span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StageReadyEventListener</span> <span class="token keyword">implements</span> <span class="token class-name">ApplicationListener</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">StageReadyEvent</span><span class="token punctuation">></span></span> <span class="token punctuation">&#123;</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ApplicationContext</span> applicationContext<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> applicationTitle<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Resource</span> fxml<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">StageReadyEventListener</span><span class="token punctuation">(</span><span class="token class-name">ApplicationContext</span> applicationContext<span class="token punctuation">,</span>
                                   <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"$&#123;app.title&#125;"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> applicationTitle<span class="token punctuation">,</span>
                                   <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"classpath:/com/hrzafer/javafxspringbootstarter/controller/main.fxml"</span><span class="token punctuation">)</span> <span class="token class-name">Resource</span> fxml<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>applicationTitle <span class="token operator">=</span> applicationTitle<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>applicationContext <span class="token operator">=</span> applicationContext<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>fxml <span class="token operator">=</span> fxml<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>


    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onApplicationEvent</span><span class="token punctuation">(</span><span class="token class-name">StageReadyEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>
            <span class="token class-name">Stage</span> stage <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token function">getStage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">URL</span> url <span class="token operator">=</span> fxml<span class="token punctuation">.</span><span class="token function">getURL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">FXMLLoader</span> fxmlLoader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FXMLLoader</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
            fxmlLoader<span class="token punctuation">.</span><span class="token function">setControllerFactory</span><span class="token punctuation">(</span>applicationContext<span class="token operator">::</span><span class="token function">getBean</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Parent</span> root <span class="token operator">=</span> fxmlLoader<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Scene</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
            stage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>
            stage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>applicationTitle<span class="token punctuation">)</span><span class="token punctuation">;</span>
            stage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`,qa,k,bn,oa,yn,En,pa,Ln,Sn,la,Cn,Fn,ca,Mn,Bn,ia,Xn,jn,ra,Pn,In,ua,qn,An,ka,Tn,On,da,Dn,Jn,fa,Rn,Hn;return{c(){u=o("div"),g=o("h3"),E=t("All articles in this series"),F=f(),r=o("ol"),w=o("li"),L=o("a"),Oa=t("JavaFX with Spring Boot Part-01: Introduction"),Da=f(),U=o("li"),A=o("a"),Ja=t("JavaFX with Spring Boot Part-02: Basic Integration"),Ra=f(),V=o("li"),T=o("a"),Ha=t("JavaFX with Spring Boot Part-03: Advanced Integration"),Wa=f(),N=o("li"),$a=t("JavaFX with Spring Boot Part-04: Using FXML"),za=f(),G=o("li"),O=o("a"),Ua=t("JavaFX with Spring Boot Part-05: FxWeaver Integration"),va=f(),ma=o("br"),ha=f(),S=o("p"),Va=t("In the previous article, we\u2019ve seen how to wire up a JavaFX application with Spring Boot properly. However, the user interface was super simple and was implemented with pure Java code. In an ideal world, we want to separate the user interface from the application logic. With FXML, we define our view as XML, assign a controller Java class for each view, and implement the business model and application on the Java side. Hence we\u2019re using a MVC approach. Another reason is, it is much easier to build a view with the "),M=o("a"),Na=t("SceneBuilder"),Ga=t("."),wa=f(),D=o("p"),Ya=t("Let\u2019s make our application a little bit more functional. We will be building a simple google search window."),ga=f(),J=o("p"),R=o("img"),xa=f(),H=o("p"),Qa=t("When user enters a text and clicks the button, the program will open your default browser search for text on google.com."),_a=f(),ba=o("br"),ya=t(`
First, we need to add the Maven dependency for FXML:
`),B=o("pre"),Ea=f(),La=o("br"),Sa=f(),W=o("p"),Ka=t("Let\u2019s define our simple user interface with FXML:"),Ca=f(),X=o("pre"),Fa=f(),m=o("p"),Za=t("We can name this "),Y=o("code"),an=t("main.fxml"),nn=t(" and save it under "),Q=o("code"),sn=t("src/main/resources/com/hrzafer/javafxspringbootstarter/controller/main.fxml"),tn=t(". Let\u2019s also implement a simple controller, "),K=o("code"),en=t("MainController"),on=t(" for this view. This class will be under "),Z=o("code"),pn=t("com.hrzafer.javafxspringbootstarter.controller"),ln=t(" package. This way, the view and the controller will be under the same directory in the classpath."),Ma=f(),j=o("pre"),Ba=f(),x=o("p"),cn=t("Notice "),aa=o("code"),rn=t("MainController"),un=t(" requires a "),na=o("code"),kn=t("HostServices"),dn=t(" object in its constructor. Spring will be responsible for creating an instance and passing it into the constructor. But we need to tell Spring how to crete such a bean."),Xa=f(),_=o("p"),fn=t("Add the following line into the "),sa=o("code"),vn=t("init"),mn=t(" method of "),ta=o("code"),hn=t("JavaFxApp"),wn=t(":"),ja=f(),P=o("pre"),Pa=f(),C=o("p"),gn=t("If you remember from the previous article, "),ea=o("code"),xn=t("StageReadyEventListener"),_n=t(" was responsible for the UI creation. So weed need to update it as follows:"),Ia=f(),I=o("pre"),qa=f(),k=o("p"),bn=t("Notice that we added a "),oa=o("code"),yn=t("Resource"),En=t(" object as class variable. This is a special Spring object to handle resources. We also told Spring where to read this resource with the "),pa=o("code"),Ln=t("@Value(classpath:...)"),Sn=t(" annotation. But the most important line is "),la=o("code"),Cn=t("fxmlLoader.setControllerFactory(applicationContext::getBean)"),Fn=t(". Here we tell the "),ca=o("code"),Mn=t("FXMLLoader"),Bn=t(", let the Spring\u2019s "),ia=o("code"),Xn=t("ApplicationContext"),jn=t(" be responsible for creation of the controller of this view. Without that line, FXMLLoader would try to instantiate the object itself. But it wouldn\u2019t be able to do so, because "),ra=o("code"),Pn=t("MainController"),In=t(" doesn\u2019t have a constructor that takes no arguments. With the "),ua=o("code"),qn=t("@Component"),An=t(" annotation over the "),ka=o("code"),Tn=t("MainController"),On=t(", Spring knows that creating an instance is its responsibility. Spring creates an instance regardless of the "),da=o("code"),Dn=t("fxmlLoader.setControllerFactory(applicationContext::getBean)"),Jn=t(" line. Without that line, "),fa=o("code"),Rn=t("FXMLLoader"),Hn=t(" tries to create another but fails."),this.h()},l(a){u=p(a,"DIV",{class:!0});var c=l(u);g=p(c,"H3",{});var zn=l(g);E=e(zn,"All articles in this series"),zn.forEach(s),F=v(c),r=p(c,"OL",{});var b=l(r);w=p(b,"LI",{});var Un=l(w);L=p(Un,"A",{href:!0});var Vn=l(L);Oa=e(Vn,"JavaFX with Spring Boot Part-01: Introduction"),Vn.forEach(s),Un.forEach(s),Da=v(b),U=p(b,"LI",{});var Nn=l(U);A=p(Nn,"A",{href:!0});var Gn=l(A);Ja=e(Gn,"JavaFX with Spring Boot Part-02: Basic Integration"),Gn.forEach(s),Nn.forEach(s),Ra=v(b),V=p(b,"LI",{});var Yn=l(V);T=p(Yn,"A",{href:!0});var Qn=l(T);Ha=e(Qn,"JavaFX with Spring Boot Part-03: Advanced Integration"),Qn.forEach(s),Yn.forEach(s),Wa=v(b),N=p(b,"LI",{});var Kn=l(N);$a=e(Kn,"JavaFX with Spring Boot Part-04: Using FXML"),Kn.forEach(s),za=v(b),G=p(b,"LI",{});var Zn=l(G);O=p(Zn,"A",{href:!0});var as=l(O);Ua=e(as,"JavaFX with Spring Boot Part-05: FxWeaver Integration"),as.forEach(s),Zn.forEach(s),b.forEach(s),c.forEach(s),va=v(a),ma=p(a,"BR",{}),ha=v(a),S=p(a,"P",{});var Aa=l(S);Va=e(Aa,"In the previous article, we\u2019ve seen how to wire up a JavaFX application with Spring Boot properly. However, the user interface was super simple and was implemented with pure Java code. In an ideal world, we want to separate the user interface from the application logic. With FXML, we define our view as XML, assign a controller Java class for each view, and implement the business model and application on the Java side. Hence we\u2019re using a MVC approach. Another reason is, it is much easier to build a view with the "),M=p(Aa,"A",{href:!0,rel:!0});var ns=l(M);Na=e(ns,"SceneBuilder"),ns.forEach(s),Ga=e(Aa,"."),Aa.forEach(s),wa=v(a),D=p(a,"P",{});var ss=l(D);Ya=e(ss,"Let\u2019s make our application a little bit more functional. We will be building a simple google search window."),ss.forEach(s),ga=v(a),J=p(a,"P",{});var ts=l(J);R=p(ts,"IMG",{src:!0,alt:!0}),ts.forEach(s),xa=v(a),H=p(a,"P",{});var es=l(H);Qa=e(es,"When user enters a text and clicks the button, the program will open your default browser search for text on google.com."),es.forEach(s),_a=v(a),ba=p(a,"BR",{}),ya=e(a,`
First, we need to add the Maven dependency for FXML:
`),B=p(a,"PRE",{class:!0});var Ps=l(B);Ps.forEach(s),Ea=v(a),La=p(a,"BR",{}),Sa=v(a),W=p(a,"P",{});var os=l(W);Ka=e(os,"Let\u2019s define our simple user interface with FXML:"),os.forEach(s),Ca=v(a),X=p(a,"PRE",{class:!0});var Is=l(X);Is.forEach(s),Fa=v(a),m=p(a,"P",{});var y=l(m);Za=e(y,"We can name this "),Y=p(y,"CODE",{});var ps=l(Y);an=e(ps,"main.fxml"),ps.forEach(s),nn=e(y," and save it under "),Q=p(y,"CODE",{});var ls=l(Q);sn=e(ls,"src/main/resources/com/hrzafer/javafxspringbootstarter/controller/main.fxml"),ls.forEach(s),tn=e(y,". Let\u2019s also implement a simple controller, "),K=p(y,"CODE",{});var cs=l(K);en=e(cs,"MainController"),cs.forEach(s),on=e(y," for this view. This class will be under "),Z=p(y,"CODE",{});var is=l(Z);pn=e(is,"com.hrzafer.javafxspringbootstarter.controller"),is.forEach(s),ln=e(y," package. This way, the view and the controller will be under the same directory in the classpath."),y.forEach(s),Ma=v(a),j=p(a,"PRE",{class:!0});var qs=l(j);qs.forEach(s),Ba=v(a),x=p(a,"P",{});var $=l(x);cn=e($,"Notice "),aa=p($,"CODE",{});var rs=l(aa);rn=e(rs,"MainController"),rs.forEach(s),un=e($," requires a "),na=p($,"CODE",{});var us=l(na);kn=e(us,"HostServices"),us.forEach(s),dn=e($," object in its constructor. Spring will be responsible for creating an instance and passing it into the constructor. But we need to tell Spring how to crete such a bean."),$.forEach(s),Xa=v(a),_=p(a,"P",{});var z=l(_);fn=e(z,"Add the following line into the "),sa=p(z,"CODE",{});var ks=l(sa);vn=e(ks,"init"),ks.forEach(s),mn=e(z," method of "),ta=p(z,"CODE",{});var ds=l(ta);hn=e(ds,"JavaFxApp"),ds.forEach(s),wn=e(z,":"),z.forEach(s),ja=v(a),P=p(a,"PRE",{class:!0});var As=l(P);As.forEach(s),Pa=v(a),C=p(a,"P",{});var Ta=l(C);gn=e(Ta,"If you remember from the previous article, "),ea=p(Ta,"CODE",{});var fs=l(ea);xn=e(fs,"StageReadyEventListener"),fs.forEach(s),_n=e(Ta," was responsible for the UI creation. So weed need to update it as follows:"),Ta.forEach(s),Ia=v(a),I=p(a,"PRE",{class:!0});var Ts=l(I);Ts.forEach(s),qa=v(a),k=p(a,"P",{});var d=l(k);bn=e(d,"Notice that we added a "),oa=p(d,"CODE",{});var vs=l(oa);yn=e(vs,"Resource"),vs.forEach(s),En=e(d," object as class variable. This is a special Spring object to handle resources. We also told Spring where to read this resource with the "),pa=p(d,"CODE",{});var ms=l(pa);Ln=e(ms,"@Value(classpath:...)"),ms.forEach(s),Sn=e(d," annotation. But the most important line is "),la=p(d,"CODE",{});var hs=l(la);Cn=e(hs,"fxmlLoader.setControllerFactory(applicationContext::getBean)"),hs.forEach(s),Fn=e(d,". Here we tell the "),ca=p(d,"CODE",{});var ws=l(ca);Mn=e(ws,"FXMLLoader"),ws.forEach(s),Bn=e(d,", let the Spring\u2019s "),ia=p(d,"CODE",{});var gs=l(ia);Xn=e(gs,"ApplicationContext"),gs.forEach(s),jn=e(d," be responsible for creation of the controller of this view. Without that line, FXMLLoader would try to instantiate the object itself. But it wouldn\u2019t be able to do so, because "),ra=p(d,"CODE",{});var xs=l(ra);Pn=e(xs,"MainController"),xs.forEach(s),In=e(d," doesn\u2019t have a constructor that takes no arguments. With the "),ua=p(d,"CODE",{});var _s=l(ua);qn=e(_s,"@Component"),_s.forEach(s),An=e(d," annotation over the "),ka=p(d,"CODE",{});var bs=l(ka);Tn=e(bs,"MainController"),bs.forEach(s),On=e(d,", Spring knows that creating an instance is its responsibility. Spring creates an instance regardless of the "),da=p(d,"CODE",{});var ys=l(da);Dn=e(ys,"fxmlLoader.setControllerFactory(applicationContext::getBean)"),ys.forEach(s),Jn=e(d," line. Without that line, "),fa=p(d,"CODE",{});var Es=l(fa);Rn=e(Es,"FXMLLoader"),Es.forEach(s),Hn=e(d," tries to create another but fails."),d.forEach(s),this.h()},h(){h(L,"href","/blog/javafx-spring-boot-01"),h(A,"href","/blog/javafx-spring-boot-02"),h(T,"href","/blog/javafx-spring-boot-03"),h(O,"href","/blog/javafx-spring-boot-05"),h(u,"class","table-of-contents"),h(M,"href","https://gluonhq.com/products/scene-builder/"),h(M,"rel","nofollow"),Ns(R.src,$n="/images/blog/javafx-spring-boot-starter-04-01.png")||h(R,"src",$n),h(R,"alt","sample javafx application"),h(B,"class","language-xml"),h(X,"class","language-xml"),h(j,"class","language-java"),h(P,"class","language-java"),h(I,"class","language-java")},m(a,c){i(a,u,c),n(u,g),n(g,E),n(u,F),n(u,r),n(r,w),n(w,L),n(L,Oa),n(r,Da),n(r,U),n(U,A),n(A,Ja),n(r,Ra),n(r,V),n(V,T),n(T,Ha),n(r,Wa),n(r,N),n(N,$a),n(r,za),n(r,G),n(G,O),n(O,Ua),i(a,va,c),i(a,ma,c),i(a,ha,c),i(a,S,c),n(S,Va),n(S,M),n(M,Na),n(S,Ga),i(a,wa,c),i(a,D,c),n(D,Ya),i(a,ga,c),i(a,J,c),n(J,R),i(a,xa,c),i(a,H,c),n(H,Qa),i(a,_a,c),i(a,ba,c),i(a,ya,c),i(a,B,c),B.innerHTML=Fs,i(a,Ea,c),i(a,La,c),i(a,Sa,c),i(a,W,c),n(W,Ka),i(a,Ca,c),i(a,X,c),X.innerHTML=Ms,i(a,Fa,c),i(a,m,c),n(m,Za),n(m,Y),n(Y,an),n(m,nn),n(m,Q),n(Q,sn),n(m,tn),n(m,K),n(K,en),n(m,on),n(m,Z),n(Z,pn),n(m,ln),i(a,Ma,c),i(a,j,c),j.innerHTML=Bs,i(a,Ba,c),i(a,x,c),n(x,cn),n(x,aa),n(aa,rn),n(x,un),n(x,na),n(na,kn),n(x,dn),i(a,Xa,c),i(a,_,c),n(_,fn),n(_,sa),n(sa,vn),n(_,mn),n(_,ta),n(ta,hn),n(_,wn),i(a,ja,c),i(a,P,c),P.innerHTML=Xs,i(a,Pa,c),i(a,C,c),n(C,gn),n(C,ea),n(ea,xn),n(C,_n),i(a,Ia,c),i(a,I,c),I.innerHTML=js,i(a,qa,c),i(a,k,c),n(k,bn),n(k,oa),n(oa,yn),n(k,En),n(k,pa),n(pa,Ln),n(k,Sn),n(k,la),n(la,Cn),n(k,Fn),n(k,ca),n(ca,Mn),n(k,Bn),n(k,ia),n(ia,Xn),n(k,jn),n(k,ra),n(ra,Pn),n(k,In),n(k,ua),n(ua,qn),n(k,An),n(k,ka),n(ka,Tn),n(k,On),n(k,da),n(da,Dn),n(k,Jn),n(k,fa),n(fa,Rn),n(k,Hn)},p:Gs,d(a){a&&s(u),a&&s(va),a&&s(ma),a&&s(ha),a&&s(S),a&&s(wa),a&&s(D),a&&s(ga),a&&s(J),a&&s(xa),a&&s(H),a&&s(_a),a&&s(ba),a&&s(ya),a&&s(B),a&&s(Ea),a&&s(La),a&&s(Sa),a&&s(W),a&&s(Ca),a&&s(X),a&&s(Fa),a&&s(m),a&&s(Ma),a&&s(j),a&&s(Ba),a&&s(x),a&&s(Xa),a&&s(_),a&&s(ja),a&&s(P),a&&s(Pa),a&&s(C),a&&s(Ia),a&&s(I),a&&s(qa),a&&s(k)}}}function Ks(q){let u,g;const E=[q[0],Cs];let F={$$slots:{default:[Qs]},$$scope:{ctx:q}};for(let r=0;r<E.length;r+=1)F=Wn(F,E[r]);return u=new Ys({props:F}),{c(){Rs(u.$$.fragment)},l(r){Hs(u.$$.fragment,r)},m(r,w){Ws(u,r,w),g=!0},p(r,[w]){const L=w&1?$s(E,[w&1&&Ls(r[0]),w&0&&Ls(Cs)]):{};w&2&&(L.$$scope={dirty:w,ctx:r}),u.$set(L)},i(r){g||(zs(u.$$.fragment,r),g=!0)},o(r){Us(u.$$.fragment,r),g=!1},d(r){Vs(u,r)}}}const Cs={title:"JavaFX with Spring Boot Part-04: Using FXML",date:"2022-04-19",categories:["javafx","spring"]};function Zs(q,u,g){return q.$$set=E=>{g(0,u=Wn(Wn({},u),Ss(E)))},u=Ss(u),[u]}class tt extends Os{constructor(u){super(),Ds(this,u,Zs,Ks,Js,{})}}export{tt as default,Cs as metadata};
